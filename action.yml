name: "Deploy Tag on Release"
description: "Update K8s config files and commit deployment for release tags"

inputs:
  deploy-app-name:
    description: "The application name used for folder structure"
    required: true
  repo-name:
    description: "The repository name used for image repo"
    required: true
  git-token:
    description: "GitHub token (GH_PAT)"
    required: true
  dry-run:
    description: "Whether to perform dry-run mode"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Get release message
      id: get_message
      uses: actions/github-script@v7
      with:
        script: |
          const tag = process.env.TAG_NAME;
          const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
          const release = await github.rest.repos.getReleaseByTag({ owner, repo, tag });
          return release.data.body;
      env:
        TAG_NAME: ${{ github.event.release.tag_name }}
    - name: Parse Jira issues
      id: parse_jira
      shell: bash
      run: |
        TAG_MESSAGE="${{ fromJson(steps.get_message.outputs.result) }}"
        TAG_NAME="${{ github.event.release.tag_name }}"

        JIRA_ITPM=$(echo "$TAG_MESSAGE" \
          | tr -d '\r' \
          | tr '\n' ' ' \
          | grep -Eoi 'itpmjbaireq-[0-9]{1,10}' \
          | tr '[:lower:]' '[:upper:]' | sort -u)
        if [[ -z "$JIRA_ITPM" ]]; then
          echo "::error title=Missing Jira Issue::No JIRA issue (ITPMJBAIREQ-xxxx) found in the release note. Aborting deployment."
          exit 1
        fi
        printf "JIRA_ITPM=%s\n" "$JIRA_ITPM" >> "$GITHUB_ENV"

        CPM_KEYS=$(echo "$TAG_MESSAGE" \
          | grep -Eoi 'cpm-[0-9]{1,10}' \
          | tr '[:lower:]' '[:upper:]' \
          | tr -d '\r' \
          | sort -u)
        if [[ -z "$CPM_KEYS" ]]; then
          echo "::error title=Missing Jira Issue::No CPM issue found. Aborting deployment."
          exit 1
        fi
        JIRA_CPM=$(echo "$CPM_KEYS" \
          | sed 's/CPM-//' \
          | awk 'NR==1 { printf "CPM%s", $0; next } { printf "/ %s", $0 }')
        printf "JIRA_CPM=%s\n" "$JIRA_CPM" >> $GITHUB_ENV
        echo "✅ Parsed JIRA_ITPM: ${JIRA_ITPM}"
        echo "✅ Parsed JIRA_CPM: ${JIRA_CPM}"

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: nanchinsnow/newebpay
        token: ${{ inputs.git-token }}
        ref: main

    - name: Change K8s image version
      shell: bash
      run: |
        IMAGE_TAG="${{ github.event.release.tag_name }}"

        if [[ "$IMAGE_TAG" =~ -rc[0-9]+$ ]]; then
          sed -i -e '/repository: ghcr.io\/nanchinsnow\/${{ vars.REPO_NAME }}/{n;s/\( *\)tag:.*/\1tag: '"$IMAGE_TAG"'/;}' ${{ vars.DEPLOY_APP_NAME }}/overlays/stg/stg.values.yaml
          sed -i -e "s#.*nanchinsnow.com/jira-issue:.*#    nanchinsnow.com/jira-issue: $JIRA_ITPM#" ${{ vars.DEPLOY_APP_NAME }}/overlays/stg/stg.values.yaml
        else
          sed -i -e '/repository: ghcr.io\/nanchinsnow\/${{ vars.REPO_NAME }}/{n;s/\( *\)tag:.*/\1tag: '"$IMAGE_TAG"'/;}' ${{ vars.DEPLOY_APP_NAME }}/overlays/prod/prod.values.yaml
          sed -i -e "s#.*nanchinsnow.com/jira-issue:.*#    nanchinsnow.com/jira-issue: $JIRA_ITPM#" ${{ vars.DEPLOY_APP_NAME }}/overlays/prod/prod.values.yaml
          sed -i -e '/repository: ghcr.io\/nanchinsnow\/${{ vars.REPO_NAME }}/{n;s/\( *\)tag:.*/\1tag: '"$IMAGE_TAG"'/;}' ${{ vars.DEPLOY_APP_NAME }}/overlays/prod/gke31.values.yaml
          sed -i -e "s#.*nanchinsnow.com/jira-issue:.*#    nanchinsnow.com/jira-issue: $JIRA_ITPM#" ${{ vars.DEPLOY_APP_NAME }}/overlays/prod/gke31.values.yaml
        fi

    - name: Commit and push changes
      shell: bash
      run: |
        git config user.name "GitHub Actions"
        git config user.email "action@github.com"
        git add -u

        if git diff-index --quiet HEAD --; then
          echo "No changes to commit."
          exit 0
        fi

        if [[ "${{ github.event.release.tag_name }}" == *-rc* ]]; then
          ENV="stg"
        else
          ENV="prod"
        fi

        SERVICE="${{ vars.DEPLOY_APP_NAME }}"
        COMMIT_TITLE="$ENV $SERVICE [$JIRA_CPM] [$JIRA_ITPM]"
        git commit \
            -m "$COMMIT_TITLE" \
            -m "Generated commit from GitHub Actions for build ${{ github.run_id }}" \
            -m "Tag URL: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.event.release.tag_name }}"
        git push
