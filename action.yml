name: "Deploy Tag on Release"
description: "Update K8s config files and commit deployment for release tags"

inputs:
  deploy-app-name:
    description: "The application name used for folder structure"
    required: true
  repo-name:
    description: "The repository name used for image repo"
    required: true
  git-token:
    description: "GitHub token (GH_PAT)"
    required: true
  dry-run:
    description: "Whether to perform dry-run mode"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Get release message
      id: get_message
      uses: actions/github-script@v7
      with:
        script: |
          const tag = process.env.TAG_NAME;
          const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
          const release = await github.rest.repos.getReleaseByTag({ owner, repo, tag });
          return release.data.body;
      env:
        TAG_NAME: ${{ github.event.release.tag_name }}
    - name: Parse Jira issues
      id: parse_jira
      shell: bash
      run: |
        echo "${{ steps.get_message.outputs.result }}"

        TAG_MESSAGE="${{ steps.get_message.outputs.result }}"
        TAG_NAME="${{ github.event.release.tag_name }}"

        ITPM_KEYS=$(echo "$TAG_MESSAGE" | tr -d '\r\n' | grep -Eoi 'itpmjbaireq-[0-9]{1,10}' | tr '[:lower:]' '[:upper:]' | sort -u)
        if [[ -z "$ITPM_KEYS" ]]; then
          echo "::error title=Missing Jira Issue::No ITPMJBAIREQ issue found. Aborting deployment."
          exit 1
        fi
        JIRA_ITPM=$(echo "$ITPM_KEYS" | paste -sd ' / ' -)
        echo "JIRA_ITPM=$JIRA_ITPM" >> $GITHUB_ENV

        CPM_KEYS=$(echo "$TAG_MESSAGE" | grep -Eoi 'cpm-[0-9]{1,10}' | tr '[:lower:]' '[:upper:]' | sort -u)
        if [[ -z "$CPM_KEYS" ]]; then
          echo "::error title=Missing Jira Issue::No CPM issue found. Aborting deployment."
          exit 1
        fi
        JIRA_CPM=$(echo "$CPM_KEYS" | paste -sd ' / ' -)
        echo "JIRA_CPM=$JIRA_CPM" >> $GITHUB_ENV

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: nanchinsnow/newebpay
        token: ${{ inputs.git-token }}
        ref: main

    - name: Update K8s config files
      shell: bash
      run: |
        IMAGE_TAG="${{ github.event.release.tag_name }}"
        APP_NAME="${{ inputs.deploy-app-name }}"
        REPO_NAME="${{ inputs.repo-name }}"

        if [[ "$IMAGE_TAG" =~ -rc[0-9]+$ ]]; then
          TARGET_FILES=("${APP_NAME}/overlays/stg/stg.values.yaml")
        else
          TARGET_FILES=(
            "${APP_NAME}/overlays/prod/prod.values.yaml"
            "${APP_NAME}/overlays/prod/gke31.values.yaml"
          )
        fi

        for FILE in "${TARGET_FILES[@]}"; do
          echo "Updating file: $FILE"
          sed -i -E "/repository: ghcr.io\/newebpay\/${REPO_NAME}/{n;s/( *tag: ).*/\1${IMAGE_TAG}/;}" "$FILE"
          sed -i -E "s|(nanchinsnow.com/jira-issue: ).*|\1${JIRA_ITPM}|" "$FILE"
        done

    - name: Commit and push changes
      shell: bash
      run: |
        git config user.name "GitHub Actions"
        git config user.email "action@github.com"
        git add -u

        if git diff-index --quiet HEAD --; then
          echo "No changes to commit."
          exit 0
        fi

        if [[ "${{ inputs.dry-run }}" == "true" ]]; then
          echo "Dry run enabled. Skip commit and push."
          exit 0
        fi

        ENVIRONMENT=$([[ "${{ github.event.release.tag_name }}" =~ -rc ]] && echo "stg" || echo "prod")
        SERVICE="${{ inputs.deploy-app-name }}"
        COMMIT_MSG="${ENVIRONMENT} ${SERVICE} [${JIRA_CPM}] [${JIRA_ITPM}]"

        git commit -m "${COMMIT_MSG}" \
          -m "Generated by GitHub Actions for build ${{ github.run_id }}" \
          -m "Tag URL: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.event.release.tag_name }}"
        git push
